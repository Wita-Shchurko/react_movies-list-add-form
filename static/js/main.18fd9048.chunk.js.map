{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","concat","required","onChange","urlChecker","id","useState","Math","random","toFixed","slice","touched","setTouched","hasError","htmlFor","type","classNames","isUrlWrong","event","onBlur","onInput","setIsUrlWrong","NewMovie","onAdd","count","setCount","newMovie","setNewMovie","buttonDisabled","setButtonDisabled","isImdbUrlWrong","setIsImdbUrlWrong","isImgUrlWrong","setIsImgUrlWrong","useEffect","trim","handleChange","target","onSubmit","preventDefault","pattern","test","disabled","App","moviesList","setMoviesList","moviesFromServer","addNewMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18fd9048.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: React.ChangeEvent<HTMLInputElement>) => void,\n  urlChecker?: { isUrlWrong: boolean,\n    setIsUrlWrong: (newWalue: boolean) => void },\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  urlChecker = null,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          name={name}\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || (urlChecker?.isUrlWrong),\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event)}\n          onBlur={() => setTouched(true)}\n          onInput={() => urlChecker?.setIsUrlWrong(false)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n      {urlChecker?.isUrlWrong && (\n        <p className=\"help is-danger\">URL is incorrect</p>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd(movie: Movie): void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n  const [isImdbUrlWrong, setIsImdbUrlWrong] = useState(false);\n  const [isImgUrlWrong, setIsImgUrlWrong] = useState(false);\n\n  const reset = () => {\n    setNewMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    // eslint-disable-next-line max-len\n    const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n    let isUrlWrong = false;\n\n    if (!pattern.test(newMovie.imdbUrl.trim())) {\n      setIsImdbUrlWrong(true);\n      isUrlWrong = true;\n    }\n\n    if (!pattern.test(newMovie.imgUrl.trim())) {\n      setIsImgUrlWrong(true);\n      isUrlWrong = true;\n    }\n\n    if (isUrlWrong) {\n      return;\n    }\n\n    setCount(count + 1);\n\n    onAdd(newMovie);\n\n    reset();\n  };\n\n  useEffect(() => {\n    if (newMovie.title.trim() && newMovie.imdbId.trim()\n    && newMovie.imdbUrl.trim() && newMovie.imgUrl.trim()) {\n      setButtonDisabled(false);\n    } else {\n      setButtonDisabled(true);\n    }\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setNewMovie({ ...newMovie, [name]: value });\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={onSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newMovie.title}\n        onChange={(event) => handleChange(event)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newMovie.description}\n        onChange={(event) => handleChange(event)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newMovie.imgUrl}\n        onChange={(event) => handleChange(event)}\n        urlChecker={{\n          isUrlWrong: isImgUrlWrong,\n          setIsUrlWrong: setIsImgUrlWrong,\n        }}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newMovie.imdbUrl}\n        onChange={(event) => handleChange(event)}\n        urlChecker={{\n          isUrlWrong: isImdbUrlWrong,\n          setIsUrlWrong: setIsImdbUrlWrong,\n        }}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newMovie.imdbId}\n        onChange={(event) => handleChange(event)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={buttonDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [moviesList, setMoviesList] = useState(moviesFromServer);\n\n  const addNewMovie = (movie: Movie) => {\n    setMoviesList([...moviesList, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesList} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={(movie) => addNewMovie(movie)}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}